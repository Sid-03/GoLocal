# ---------------------------------------
# Product Service Configuration
# ---------------------------------------

# Server Port
server.port=8081 
# Different port from user-service

# Spring Application Name
spring.application.name=product-service

# --- Database Configuration ---
# Use environment variables provided by Docker Compose, with defaults for local testing
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:product_db}?createDatabaseIfNotExist=trueÂ¤tSchema=public
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASS:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA & Hibernate Configuration ---
# 'update' is convenient for development but use 'validate' or 'none' for production.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false 
# Set true for debugging SQL
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.default_schema=public

# Logging
logging.level.root=INFO
# More logs for this service
logging.level.com.golocal.productservice=DEBUG
# Only if spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
# Log parameter binding
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# --- Actuator (Optional) ---
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized