# ---------------------------------------
# Inquiry Service Configuration
# ---------------------------------------

# Server Port
server.port=8082 
# Different port from other services

# Spring Application Name
spring.application.name=inquiry-service

# --- Database Configuration ---
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:inquiry_db}?createDatabaseIfNotExist=trueÂ¤tSchema=public
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASS:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA & Hibernate Configuration ---
spring.jpa.hibernate.ddl-auto=update 
# Use 'update' for dev, 'validate' or 'none' for prod
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.default_schema=public

# --- JWT Configuration (Optional Here) ---
# Only needed if the service itself needs to parse/validate the token content
# beyond what the gateway provides (e.g., extract specific claims not passed in headers).
# jwt.secret=${JWT_SECRET:ReplaceWithYourVeryStrongSecretKeyMinimum256BitsLong}

# Logging
logging.level.root=INFO
logging.level.com.golocal.inquiryservice=DEBUG
# To see security context processing
logging.level.org.springframework.security=INFO
# Only if spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=DEBUG
# Log parameter binding
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# --- Actuator (Optional) ---
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details-on=when_authorized